<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.atomos</groupId>
		<artifactId>atomos.tests</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>service.substrate</artifactId>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.release combine.self="override"></maven.compiler.release>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
	</properties>

    <repositories>
        <repository>
            <id>atomos-temp-m2repo</id>
            <url>https://github.com/tjwatson/atomos-temp-m2repo/raw/master/repository</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
		</repository>
    </repositories>
	<dependencies>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.osgi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.atomos</groupId>
			<artifactId>atomos.framework</artifactId>
			<version>${atomos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atomos</groupId>
			<artifactId>service.contract</artifactId>
			<version>${atomos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atomos</groupId>
			<artifactId>service.impl</artifactId>
			<version>${atomos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atomos</groupId>
			<artifactId>service.impl.activator</artifactId>
			<version>${atomos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atomos</groupId>
			<artifactId>service.user</artifactId>
			<version>${atomos.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.promise</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.command</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.gogo.shell</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.whiteboard</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.webconsole</artifactId>
			<classifier>all</classifier>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.service.cm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.service.event</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
				  <execution>
					<id>copy-resources</id>
					<!-- here the phase you need -->
					<phase>package</phase>
					<goals>
					  <goal>copy-resources</goal>
					</goals>
					<configuration>
					  <outputDirectory>${project.build.directory}/substrate_lib</outputDirectory>
					  <resources>          
						<resource>
						  <directory>${project.build.directory}/../eclipse.jdt.ls/org.eclipse.jdt.ls.product/target/repository/plugins/</directory>
							<includes>
								<include>*.jar</include>
							</includes>
							<excludes>
								<exclude>org.eclipse.osgi_3.15.100.v20191114-1701.jar</exclude>
							</excludes>							
						</resource>
						<resource>
						  <directory>${project.build.directory}/../eclipse.jdt.ls/org.eclipse.jdt.ls.product/target/repository/features/</directory>
							<includes>
								<include>*.jar</include>
							</includes>						
						</resource>
					  </resources>              
					</configuration>            
				  </execution>
				</executions>
			  </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/substrate_lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.graalvm.nativeimage</groupId>
				<artifactId>native-image-maven-plugin</artifactId>
				<version>19.3.0</version> 
				<executions>
					<execution>
						<goals>
							<goal>native-image</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<imageName>atomos</imageName>
					<mainClass>org.atomos.service.substrate.GogoConsole</mainClass>
					<buildArgs>
						-Datomos.substrate=${project.build.directory}
						--allow-incomplete-classpath
						--no-fallback
						--initialize-at-build-time=org.eclipse.jdt.ls.core.internal,org.slf4j,org.atomos.framework,org.eclipse.osgi,org.eclipse.equinox.log,org.osgi.framework,org.osgi.dto,org.osgi.service.condpermadmin,org.osgi.service.log,org.osgi.service.packageadmin,org.osgi.service.permissionadmin,org.osgi.service.resolver,org.osgi.service.startlevel,org.osgi.service.url,org.osgi.util.tracker,org.osgi.resource,org.apache.felix.resolver,javax.servlet
						-H:ReflectionConfigurationFiles=${project.basedir}/graal_class_config.json
						-H:ResourceConfigurationFiles=${project.basedir}/graal_resource_config.json
						-H:+ReportUnsupportedElementsAtRuntime
						-H:+ReportExceptionStackTraces
						-H:+TraceClassInitialization
						-H:+PrintClassInitialization
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
